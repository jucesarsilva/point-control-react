{"version":3,"sources":["Utils/token.js","App/components/Card.js","App/components/Title.js","App/components/Form.js","App/components/Error.js","App/components/Input.js","App/components/Button.js","Utils/userInfo.js","Utils/toastConfig.js","App/views/Login/index.js","Utils/api.js","App/components/Wrapper.js","App/containers/Layout.js","App/components/TableDay.js","App/components/Time.js","App/components/Day.js","Utils/format.js","App/views/Days/index.js","App/views/Times/index.js","Router/index.js","serviceWorker.js","index.js"],"names":["_TOKEN_","getToken","sessionStorage","getItem","Card","children","display","flexDirection","alignItems","justifyContent","padding","margin","backgroundColor","minHeight","maxWidth","minWidth","borderRadius","boxShadow","style","Title","color","fontSize","fontFamily","fontWeight","Form","onSubmit","Error","error","message","Input","props","onFocus","state","borderBottom","setState","onBlur","displayClear","onClick","position","bottom","right","cursor","defaults","type","name","Math","random","toFixed","value","placeholder","outlineWidth","border","clear","index","containerStyle","marginBottom","errorStyle","onChange","bind","event","this","target","autoComplete","Component","Button","onMouseEnter","onMouseLeave","label","float","_User_","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Login","login","password","handleChangeLogin","handleChangePassaword","handleSubmit","length","preventDefault","axios","post","then","resp","user","token","codUser","data","email","roles","setItem","JSON","stringify","tokenType","accessToken","window","location","href","catch","toast","toastConfig","className","API","create","baseURL","headers","Authorization","Wrapper","Layout","removeItem","height","overflow","TableDay","Time","point","time","Day","points","map","key","history","push","codDay","encodeURI","date","flexWrap","listStyleType","last","displayTimes","formatDate","day","mask","moment","format","parseDate","split","month","year","slice","registerLocale","ptBr","Days","handleChangeStartDate","startDate","handleChangeEndDate","endDate","days","tableDays","startOf","subtract","toDate","Date","onFilter","get","period","getDatesByFilter","reverse","find","d","differenceInDays","Array","keys","i","addDays","placeholderText","locale","dateFormat","selected","displayDays","Times","getDays","match","params","id","editing","removing","handleAdd","onRemove","parse","marginRight","updateModel","persist","success","hasOwnProperty","splice","showDate","displayInputs","PrivateRoute","component","rest","render","Router","exact","path","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0058b1f3.chunk.js","sourcesContent":["const _TOKEN_ = 'token'\r\n\r\nconst getToken = () => {\r\n  return sessionStorage.getItem(_TOKEN_)\r\n}\r\n\r\nconst setToken = (token) => {\r\n  sessionStorage.setItem(_TOKEN_, token)\r\n}\r\n\r\nfunction clearToken() {\r\n  sessionStorage.removeItem(_TOKEN_)\r\n}\r\n\r\nexport { getToken, setToken, clearToken }\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Card = ({\r\n  children,\r\n  display = 'flex',\r\n  flexDirection = 'column',\r\n  alignItems = 'center',\r\n  justifyContent = 'start',\r\n  padding = '20px',\r\n  margin = 'auto',\r\n  backgroundColor = 'white',\r\n  minHeight = '250px',\r\n  maxWidth = '600px',\r\n  minWidth = '300px',\r\n  borderRadius = '10px',\r\n  boxShadow = '0px 0px 8px 3px rgba(0,0,0,0.25)'\r\n}) => (\r\n    <div\r\n      style={{\r\n        display,\r\n        flexDirection,\r\n        alignItems,\r\n        justifyContent,\r\n        padding,\r\n        margin,\r\n        backgroundColor,\r\n        minHeight,\r\n        maxWidth,\r\n        minWidth,\r\n        borderRadius,\r\n        boxShadow,\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n\r\nCard.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  display: PropTypes.string,\r\n  flexDirection: PropTypes.string,\r\n  alignItems: PropTypes.string,\r\n  justifyContent: PropTypes.string,\r\n  padding: PropTypes.string,\r\n  margin: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  minHeight: PropTypes.string,\r\n  maxWidth: PropTypes.string,\r\n  minWidth: PropTypes.string,\r\n  borderRadius: PropTypes.string,\r\n  boxShadow: PropTypes.string\r\n}\r\n\r\nexport default Card","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Title = ({\r\n  children,\r\n  color = 'blueviolet',\r\n  fontSize = '24px',\r\n  fontFamily = 'Sans-serif',\r\n  fontWeight = '600',\r\n  margin = '8px 0'\r\n}) => (\r\n    <div\r\n      style={{\r\n        color,\r\n        fontSize,\r\n        fontFamily,\r\n        fontWeight,\r\n        margin\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  color: PropTypes.string,\r\n  fontSize: PropTypes.string,\r\n  fontFamily: PropTypes.string,\r\n  fontWeight: PropTypes.string,\r\n  margin: PropTypes.string\r\n}\r\n\r\nexport default Title","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Form = ({\r\n  children,\r\n  onSubmit\r\n}) => (\r\n    <form onSubmit={onSubmit}>\r\n      {children}\r\n    </form>\r\n  )\r\n\r\nForm.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  color: PropTypes.func,\r\n}\r\n\r\nexport default Form","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Error = ({\r\n  error,\r\n  message\r\n}) => (\r\n    error ?\r\n      <span style={{ color: 'red', fontSize: '12px' }}>\r\n        {message}\r\n      </span> : null\r\n  )\r\n\r\nError.propTypes = {\r\n  error: PropTypes.bool,\r\n  message: PropTypes.string\r\n}\r\n\r\nexport default Error","import React, { Component } from 'react'\r\nimport Error from 'App/components/Error'\r\n\r\nclass Input extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const defaults = {\r\n      type: 'text',\r\n      name: `input-${Math.random().toFixed(4)}`,\r\n      value: '',\r\n      placeholder: 'placeholder',\r\n      backgroundColor: '#d1d1d1',\r\n      padding: '10px 8px',\r\n      outlineWidth: 0,\r\n      border: 'none',\r\n      borderBottom: '1px solid gray',\r\n      clear: null,\r\n      index: null\r\n    }\r\n    this.state = {\r\n      props: { ...defaults, ...props }\r\n    }\r\n    this.containerStyle = {\r\n      display: 'flex',\r\n      position: 'relative',\r\n      flexDirection: 'column',\r\n      marginBottom: '20px',\r\n    }\r\n    this.errorStyle = {\r\n      color: 'red',\r\n      fontSize: '12px'\r\n    }\r\n    this.onChange = this.onChange.bind(this)\r\n    this.onFocus = this.onFocus.bind(this)\r\n    this.onClick = this.onClick.bind(this)\r\n  }\r\n\r\n  onChange(event) {\r\n    let props = { ...this.state.props }\r\n    props.value = event.target.value\r\n    props.onChange(props.value)\r\n    this.setState({ 'props': props })\r\n  }\r\n\r\n  onFocus = () => {\r\n    let props = { ...this.state.props }\r\n    props.borderBottom = '1px solid blueviolet'\r\n    this.setState({ 'props': props })\r\n  }\r\n\r\n  onBlur = () => {\r\n    let props = { ...this.state.props }\r\n    props.borderBottom = '1px solid gray'\r\n    this.setState({ 'props': props })\r\n  }\r\n\r\n  onClick() {\r\n    if (this.props.clear) \r\n      this.props.clear(this.props.index)\r\n  }\r\n\r\n  displayClear = () => {\r\n    return <div\r\n    onClick={this.onClick}\r\n    style={{\r\n      position: 'absolute',\r\n      bottom: '20px',\r\n      right: '20px',\r\n      fontWeight: 'bold',\r\n      color: 'red',\r\n      cursor: 'pointer'\r\n    }}>x</div>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label style={this.containerStyle}>\r\n        <input\r\n          type={this.state.props.type}\r\n          name={this.state.props.name}\r\n          value={this.state.props.value}\r\n          placeholder={this.state.props.placeholder}\r\n          onChange={this.onChange}\r\n          onFocus={this.onFocus}\r\n          onBlur={this.onBlur}\r\n          style={this.state.props}\r\n          autoComplete=\"off\"\r\n        />\r\n        {this.props.clear ? this.displayClear() : '' }\r\n        <Error error={this.props.error} message={this.props.message} />\r\n      </label>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Input","import React, { Component } from 'react'\r\n\r\nclass Button extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props)\r\n\r\n    const defaults = {\r\n      label: 'Botão',\r\n      type: 'submit',\r\n      color: 'white',\r\n      backgroundColor: 'blueviolet',\r\n      padding: '8px',\r\n      margin: '0',\r\n      fontSize: '16px',\r\n      cursor: 'pointer',\r\n      outlineWidth: 0,\r\n      border: 'none',\r\n      float: 'unset',\r\n      borderRadius: 'unset'\r\n    }\r\n\r\n    this.state = {\r\n      props: { ...defaults, ...props }\r\n    }\r\n\r\n    this.onMouseEnter = this.onMouseEnter.bind(this)\r\n    this.onMouseLeave = this.onMouseLeave.bind(this)\r\n    this.onClick = this.onClick.bind(this)\r\n  }\r\n\r\n  onMouseEnter = () => {\r\n    let props = { ...this.state.props }\r\n    props.backgroundColor = '#973deb'\r\n    this.setState({ 'props': props })\r\n  }\r\n\r\n  onMouseLeave = () => {\r\n    let props = { ...this.state.props }\r\n    props.backgroundColor = 'blueviolet'\r\n    this.setState({ 'props': props })\r\n  }\r\n\r\n  onClick() {\r\n    if (this.props.onClick) {\r\n      this.props.onClick()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        type={this.state.props.type}\r\n        style={this.state.props}\r\n        onMouseEnter={this.onMouseEnter}\r\n        onMouseLeave={this.onMouseLeave}\r\n        onClick={this.onClick}>\r\n        {this.state.props.label}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button","const _User_ = 'user'\r\n\r\nconst getUser = () => {\r\n  return JSON.parse(sessionStorage.getItem(_User_))\r\n}\r\n\r\nconst setUser = (user) => {\r\n  sessionStorage.setItem(_User_, JSON.stringify(user))\r\n}\r\n\r\nfunction clearUser() {\r\n  sessionStorage.removeItem(_User_)\r\n}\r\n\r\nexport { getUser, setUser, clearUser }","export default {\r\n  position: \"bottom-right\",\r\n  autoClose: 5000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true\r\n}","import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport Card from 'App/components/Card'\r\nimport Title from 'App/components/Title'\r\nimport Form from 'App/components/Form'\r\nimport Input from 'App/components/Input'\r\nimport Button from 'App/components/Button'\r\nimport { setToken } from 'Utils/token'\r\nimport { setUser } from 'Utils/userInfo'\r\nimport toastConfig from 'Utils/toastConfig'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport 'App/views/Login/index.css'\r\n\r\nclass Login extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props)\r\n\r\n    this.state = {\r\n      login: '',\r\n      password: '',\r\n    };\r\n\r\n    this.error = {\r\n      login: false,\r\n      password: false\r\n    };\r\n\r\n    this.message = {\r\n      login: 'O campo login é de preenchimento obrigatório.',\r\n      password: 'O campo senha é de preenchimento obrigatório.'\r\n    }\r\n\r\n    this.handleChangeLogin = this.handleChangeLogin.bind(this)\r\n    this.handleChangePassaword = this.handleChangePassaword.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  handleChangeLogin(value) {\r\n    if (!value || !value.length) {\r\n      this.error.login = true\r\n    } else {\r\n      this.error.login = false\r\n    }\r\n    this.setState({ login: value })\r\n  }\r\n\r\n  handleChangePassaword(value) {\r\n    if (!value || !value.length) {\r\n      this.error.password = true\r\n    } else {\r\n      this.error.password = false\r\n    }\r\n    this.setState({ password: value })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    if (this.error.login || this.error.password) {\r\n      return\r\n    }\r\n    axios.post('http://localhost.com.br:8081/api/auth/login', {\r\n      login: this.state.login,\r\n      password: this.state.password\r\n    })\r\n      .then((resp) => {\r\n        setUser({\r\n          codUser: resp.data.codUser,\r\n          name: resp.data.name,\r\n          email: resp.data.email,\r\n          roles: resp.data.roles,\r\n        })\r\n        setToken(`${resp.data.tokenType} ${resp.data.accessToken}`)\r\n        window.location.href = '/'\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Login/Senha inválido(s).\", toastConfig)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"login\">\r\n        <Card>\r\n          <Title>\r\n            Controle de Ponto\r\n\t\t\t\t\t</Title>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Input name=\"login\" type=\"text\" placeholder=\"Login\"\r\n              value={this.state.login}\r\n              onChange={this.handleChangeLogin}\r\n              error={this.error.login}\r\n              message={this.message.login}\r\n            />\r\n            <Input name=\"password\" type=\"password\" placeholder=\"Senha\"\r\n              value={this.state.password}\r\n              onChange={this.handleChangePassaword}\r\n              error={this.error.password}\r\n              message={this.message.password}\r\n            />\r\n            <Button label=\"Acessar\" />\r\n          </Form>\r\n        </Card>\r\n        <ToastContainer />\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login","import axios from 'axios'\r\nimport { getToken } from 'Utils/token'\r\n\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost.com.br:8081/api\",\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `${getToken()}`,\r\n  },\r\n})\r\n\r\nexport default API","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Wrapper = ({\r\n  children,\r\n  padding = '20px 10px',\r\n  color = 'white',\r\n  backgroundColor\r\n}) => (\r\n    <div\r\n      style={{\r\n        padding,\r\n        color,\r\n        backgroundColor\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n\r\nWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  padding: PropTypes.string,\r\n  color: PropTypes.string,\r\n  backgroundColor: PropTypes.string\r\n}\r\n\r\nexport default Wrapper\r\n","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport Wrapper from 'App/components/Wrapper'\r\nimport Button from 'App/components/Button'\r\nimport { clearUser } from 'Utils/userInfo'\r\nimport { clearToken } from 'Utils/token'\r\n\r\nclass Layout extends Component {\r\n\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { ...props }\r\n    this.onClick = this.onClick.bind(this)\r\n  }\r\n\r\n  onClick() {\r\n    clearToken();\r\n    clearUser();\r\n    window.location.href = ''\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Wrapper padding='20px' backgroundColor='#655BA2'>\r\n          Controle de ponto\r\n          <Button\r\n            float='right'\r\n            onClick={this.onClick}\r\n            label='Sair'\r\n            margin=\"0\"\r\n            padding=\"5px 15px\"\r\n            borderRadius=\"0\" />\r\n        </Wrapper>\r\n        <section style={{ height: 'calc(100vh - 60px - 59px)', overflow: 'auto' }}>\r\n          {this.props.children}\r\n        </section>\r\n        <Wrapper padding='20px' backgroundColor='#333333'>\r\n          Controle de ponto\r\n        </Wrapper>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst TableDay = ({\r\n  children,\r\n  padding = '0'\r\n}) => (\r\n    <ul style={{\r\n      padding,\r\n      margin: 0\r\n    }}>\r\n      {children}\r\n    </ul>\r\n  )\r\n\r\nTableDay.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  padding: PropTypes.string,\r\n}\r\n\r\nexport default TableDay","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Time = ({\r\n  point\r\n}) => (\r\n    <div style={{\r\n      margin: '0 10px',\r\n      padding: '5px 10px',\r\n      backgroundColor: 'blueviolet',\r\n      color: 'white',\r\n      fontWeight: '500'\r\n    }}>\r\n      {point.time}\r\n    </div>\r\n  )\r\n\r\nTime.propTypes = {\r\n  point: PropTypes.object\r\n}\r\n\r\nexport default Time","import React, { Component } from 'react'\r\nimport Time from 'App/components/Time'\r\nimport Form from 'App/components/Form'\r\nimport Button from 'App/components/Button'\r\n\r\nclass Day extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { ...props }\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  displayTimes() {\r\n    if (!this.state.value.points) return ''\r\n    return this.state.value.points.map((point, index) => {\r\n      return <Time point={point} key={index} />\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    if (this.state.value.points) {\r\n      this.props.history.push(`/times/edit/${this.state.value.codDay}`)\r\n    }\r\n    else {\r\n      this.props.history.push(`/times/new/${encodeURI(this.state.value.date)}`)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n        listStyleType: 'none',\r\n        border: '1px solid gray',\r\n        borderBottom: this.state.last ? '1px solid gray' : 'none'\r\n      }}>\r\n        <div style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          flexWrap: 'wrap',\r\n          alignItems: 'center',\r\n        }}>\r\n          {this.state.value.date}: {this.displayTimes()}\r\n        </div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Button label={!this.state.value.points ? 'Inserir' : 'Editar'  }\r\n            margin=\"0 10px\"\r\n            padding=\"5px 15px\"\r\n            borderRadius=\"0\" />\r\n        </Form>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Day","import moment from 'moment'\r\n\r\nconst dateFormatMask = 'YYYY-MM-DD'\r\n\r\nconst dateFormatMaskBR = 'DD-MM-YYYY'\r\n\r\nconst formatDate = (day, mask) => {\r\n  return moment(day).format(mask)\r\n}\r\n\r\nconst parseDate = (date) => {\r\n  let day  = date.split(\"-\")[0]\r\n  let month  = date.split(\"-\")[1]\r\n  let year  = date.split(\"-\")[2]\r\n  return `${year}-${('0'+month).slice(-2)}-${('0'+day).slice(-2)}`\r\n}\r\n\r\nexport {parseDate,  formatDate, dateFormatMask, dateFormatMaskBR }","import moment from 'moment'\r\nimport React, { Component } from 'react'\r\nimport API from 'Utils/api'\r\nimport Layout from 'App/containers/Layout'\r\nimport TableDay from 'App/components/TableDay'\r\nimport Day from 'App/components/Day'\r\nimport Button from 'App/components/Button'\r\nimport toastConfig from 'Utils/toastConfig'\r\nimport { formatDate, dateFormatMask, dateFormatMaskBR } from 'Utils/format'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport DatePicker from \"react-datepicker\"\r\nimport { registerLocale } from \"react-datepicker\"\r\nimport ptBr from 'date-fns/locale/pt-BR'\r\nimport { addDays, differenceInDays  } from 'date-fns';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport './index.css'\r\n\r\nregisterLocale('pt-BR', ptBr)\r\n\r\nclass Days extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      days: [],\r\n      tableDays: [],\r\n      startDate: moment().startOf(\"day\").subtract(31, \"days\").toDate(),\r\n      endDate: new Date()\r\n    }\r\n    this.onFilter = this.onFilter.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onFilter()\r\n  }\r\n\r\n  handleChangeStartDate = date => {\r\n    this.setState({\r\n      startDate: date\r\n    })\r\n  }\r\n\r\n  handleChangeEndDate = date => {\r\n    this.setState({\r\n      endDate: date\r\n    })\r\n  }\r\n\r\n  onFilter() {\r\n    let startDate = encodeURI(moment(this.state.startDate).format(dateFormatMask))\r\n    let endDate = encodeURI(moment(this.state.endDate).format(dateFormatMask))\r\n    API.get(`days/${startDate}/${endDate}`)\r\n      .then((resp) => {\r\n        this.setState({ days: resp.data })\r\n        let dates = this.getDatesByFilter(this.state.endDate, this.state.startDate)\r\n        let period = dates.map(date => moment(date).format(dateFormatMaskBR))\r\n        period = period.reverse()\r\n        let tableDays = period.map((date, index) => {\r\n          let day = this.state.days.find(d => moment(d.date).format(dateFormatMaskBR) === date)\r\n          if (day) day.date = formatDate(day.date, dateFormatMaskBR)\r\n          return day || { date: date }\r\n        })\r\n        this.setState({ tableDays: tableDays })\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Não foi possível atualizar as marcações de ponto.\", toastConfig)\r\n      })\r\n  }\r\n\r\n  getDatesByFilter(endDate, startDate) {\r\n    const days = differenceInDays(endDate, startDate)\r\n    return [...Array(days+1).keys()].map((i) => addDays(startDate, i))\r\n  }\r\n\r\n  displayDays() {\r\n    return this.state.tableDays.map((day, index) =>\r\n      <Day key={index}\r\n        value={day}\r\n        history={this.props.history}\r\n        last={index === (this.state.tableDays.length - 1)} />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div className=\"filters-content\">\r\n          <DatePicker className=\"datepicker\"\r\n            placeholderText=\"Dt. início\"\r\n            locale=\"pt-BR\"\r\n            dateFormat=\"dd/MM/yyyy\"\r\n            selected={this.state.startDate} \r\n            onChange={this.handleChangeStartDate} />\r\n          <DatePicker className=\"datepicker\"\r\n            placeholderText=\"Dt. fim\"\r\n            locale=\"pt-BR\"\r\n            dateFormat=\"dd/MM/yyyy\"\r\n            selected={this.state.endDate} \r\n            onChange={this.handleChangeEndDate} />\r\n          <Button\r\n            onClick={this.onFilter}\r\n            label='Filtrar'\r\n            margin=\"0\"\r\n            padding=\"5px 15px\"\r\n            borderRadius=\"0\" />\r\n        </div>\r\n        <TableDay padding='20px'>\r\n          {this.displayDays()}\r\n        </TableDay>\r\n        <ToastContainer />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Days\r\n","// import moment from 'moment'\r\nimport React, { Component } from 'react'\r\nimport API from 'Utils/api'\r\nimport Layout from 'App/containers/Layout'\r\nimport Input from 'App/components/Input'\r\nimport Form from 'App/components/Form'\r\nimport Button from 'App/components/Button'\r\nimport toastConfig from 'Utils/toastConfig'\r\nimport { getUser } from 'Utils/userInfo'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport { parseDate, formatDate, dateFormatMaskBR } from 'Utils/format'\r\n\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nclass Times extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ...props,\r\n      editing: false,\r\n      removing: false\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.handleAdd = this.handleAdd.bind(this)\r\n    this.onClick = this.onClick.bind(this)\r\n    this.onRemove = this.onRemove.bind(this)\r\n  }\r\n\r\n  getDays = () => {\r\n    API.get(`day/${this.props.match.params.id}`)\r\n      .then((resp) => {\r\n        this.setState({ 'day': resp.data })\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Não foi possível carregar as marcações de ponto.\", toastConfig)\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.match.params.id) {\r\n      this.setState({ 'editing': true })\r\n      this.getDays()\r\n    }\r\n    if (this.props.match.params.date) {\r\n      this.setState({ 'editing': false })\r\n      this.setState({\r\n        day: {\r\n          codUser: getUser().codUser,\r\n          date: parseDate(this.props.match.params.date),\r\n          points: []\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  showDate() {\r\n    if (this.state.day) {\r\n      return <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        padding: '10px',\r\n        marginBottom: '20px',\r\n        backgroundColor: '#949494',\r\n        color: 'white'\r\n      }}>\r\n        Dia: {formatDate(this.state.day.date, dateFormatMaskBR)}\r\n        <Form onSubmit={this.handleAdd}>\r\n          <Button label='+'\r\n            margin=\"0 10px\"\r\n            padding=\"5px 10px\"\r\n            borderRadius=\"50%\" />\r\n        </Form>\r\n      </div>\r\n    }\r\n    return ''\r\n  }\r\n\r\n  updateModel(value, day) {\r\n    if (!value || !value.length) {\r\n      day.error = true\r\n      day.message = 'Marcação inválida.'\r\n    } else {\r\n      day.error = false\r\n    }\r\n    day.time = value\r\n  }\r\n\r\n  displayInputs() {\r\n    if (this.state.day) {\r\n      return <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'baseline'\r\n      }}>\r\n        {\r\n          this.state.day.points.map((point, index) =>\r\n            <Input type=\"text\"\r\n              index={index}\r\n              clear={this.onRemove}\r\n              maxWidth=\"80px\"\r\n              marginRight=\"15px\"\r\n              name={`time ${index + 1}`}\r\n              placeholder={`marcação ${index + 1}`}\r\n              key={index}\r\n              value={point.time}\r\n              onChange={(value) => this.updateModel(value, point)}\r\n              error={point.error}\r\n              message={point.message}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          this.state.day.points.length === 0 ? '' : \r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Button label='Salvar'\r\n              margin=\"0 10px\"\r\n              padding=\"5px 15px\"\r\n              borderRadius=\"0\" />\r\n          </Form>\r\n        }\r\n        \r\n      </div>\r\n    }\r\n    return ''\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    this.persist()\r\n  }\r\n\r\n  persist() {\r\n    if (this.state.editing) {\r\n      API.post(`day/update`, this.state.day)\r\n        .then((resp) => {\r\n          toast.success(\"Marcações de pontos atualizadas com sucesso.\", toastConfig)\r\n        })\r\n        .catch(() => {\r\n          toast.error(\"Não foi possível atualizar as marcações de ponto.\", toastConfig)\r\n        })\r\n    } else {\r\n      API.post(`day/save`, this.state.day)\r\n        .then((resp) => {\r\n          this.props.history.push(`/times/edit/${resp.data.codDay}`)\r\n          toast.success(\"Marcações de pontos salvas com sucesso.\", toastConfig)\r\n        })\r\n        .catch(() => {\r\n          toast.error(\"Não foi possível salvar as marcações de ponto.\", toastConfig)\r\n        })\r\n    }\r\n  }\r\n\r\n  handleAdd(event) {\r\n    event.preventDefault()\r\n    let day = { ...this.state.day }\r\n    if (this.state.editing) {\r\n      day.points.push({\r\n        codDay: this.props.match.params.id,\r\n        time: '00:00:00'\r\n      })\r\n      this.setState({ 'day': day })\r\n    } else {\r\n      day.points.push({\r\n        time: '00:00:00'\r\n      })\r\n      this.setState({ 'day': day })\r\n    }\r\n  }\r\n\r\n  onClick() {\r\n    this.props.history.push('')\r\n  }\r\n\r\n  onRemove(index) {\r\n    if (this.state.removing) return\r\n    let day = { ...this.state.day }\r\n    let point = day.points[index];\r\n    if (!point.hasOwnProperty('codPoint')) {\r\n      day.points.splice(index, 1)\r\n      this.setState({ 'day': day })\r\n    } else {\r\n      this.setState({ 'removing': true })\r\n      API.post(`point/delete`, point)\r\n        .then(() => {\r\n          this.setState({ 'removing': false })\r\n          this.getDays()\r\n          toast.success(\"Marcação de ponto removida com sucesso.\", toastConfig)\r\n        })\r\n        .catch(() => {\r\n          this.setState({ 'removing': false })\r\n          toast.error(\"Não foi possível remover a marcação de ponto.\", toastConfig)\r\n        })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <section style={{ padding: '20px' }}>\r\n          <Button\r\n            onClick={this.onClick}\r\n            label='Voltar'\r\n            margin=\"0 0 20px 0\"\r\n            padding=\"5px 15px\"\r\n            borderRadius=\"0\" />\r\n          {this.showDate()}\r\n          {this.displayInputs()}\r\n        </section>\r\n        <ToastContainer />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Times\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\n\r\nimport { getToken } from 'Utils/token'\r\nimport Login from 'App/views/Login/index'\r\nimport Days from 'App/views/Days/index'\r\nimport Times from 'App/views/Times/index'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => {\r\n      return getToken() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n          <Login />\r\n        )\r\n    }}\r\n  />\r\n)\r\n\r\nclass Router extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Days} />\r\n          <PrivateRoute path=\"/times/edit/:id?\" component={Times} />\r\n          <PrivateRoute path=\"/times/new/:date\" component={Times} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Router\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Router from './Router'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Router />, document.getElementById('root'))\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}